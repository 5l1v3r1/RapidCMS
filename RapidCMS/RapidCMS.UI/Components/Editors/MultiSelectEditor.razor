@inherits BaseRelationEditor

@using RapidCMS.Common.Data
@using RapidCMS.UI.Helpers

@if (Options != null && SelectedOptions != null)
{
    var index = 0;
    var group = Guid.NewGuid().ToString();

    <div class="form-control form-control-select-list @(CssHelper.GetValidationClass(State))">
        @foreach (var option in Options)
        {
            var check = SelectedOptions.Any(x => x.Id.Equals(option.Id));

            <div class="form-check">
                <input class="form-check-input"
                       type="checkbox"
                       value=@option.Id
                       id="@group-option@(++index)"
                       name=@group
                       checked=@check
                       onchange=@((UIChangeEventArgs __e) => OnChangeAsync(__e, option.Id)) />
                <label class="form-check-label" for="@group-option@(index)">
                    @option.Label
                </label>
            </div>
        }

    </div>

    @foreach (var message in GetValidationMessages())
    {
        <div class="invalid-feedback">
            @message
        </div>
    }
}
@functions {

    private IEnumerable<IElement>? Options;
    private IEnumerable<IElement>? SelectedOptions;

    protected override async Task OnParametersSetAsync()
    {
        if (RelationDataCollection != null)
        {
            await RelationDataCollection.SetRelationMetadataAsync(Entity, Property);

            Options = await RelationDataCollection.GetAvailableElementsAsync();
            SelectedOptions = await RelationDataCollection.GetRelatedElementsAsync();
        }
    }

    private async Task OnChangeAsync(UIChangeEventArgs e, object value)
    {
        var element = Options.First(x => x.Id.Equals(value));

        if ((bool)e.Value == true)
        {
            await RelationDataCollection!.AddElementAsync(element);
        }
        else
        {
            await RelationDataCollection!.RemoveElementAsync(element);
        }

        EditContext.NotifyPropertyChanged(Property);
    }
}