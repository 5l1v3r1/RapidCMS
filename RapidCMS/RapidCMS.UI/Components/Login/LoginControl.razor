@using System.Security.Claims
@using Microsoft.AspNetCore.Http

@inject IHttpContextAccessor _httpContextAccessor
@inject HttpClient Http
<!--

The Microsoft.AspNetCore.Authentication.AzureAD.UI

NuGet package creates a 'virtual' controller that

contains code that allows the

 /Account/signin and /Account/signout

 links to work

-->

@if (User.Identity.Name != null)
{
    <b>You are logged in as: @GivenName</b>
    <a class="ml-md-auto btn btn-primary"
       href="/AzureAD/Account/SignOut?post_logout_redirect_uri=@RedirectUri"
       target="_top">Logout</a>
}
else
{
    <a class="ml-md-auto btn btn-primary"
       href="/AzureAD/Account/SignIn?redirectUri=@RedirectUri"
       target="_top">Login</a>
}

@functions {
    private ClaimsPrincipal User;
    private string RedirectUri;
    private string GivenName;
    protected override void OnInit()
    {
        base.OnInit();
        try
        {
            // Set the user to determine if they are logged in
            User = _httpContextAccessor.HttpContext.User;
            // Try to get the GivenName
            var givenName =
                _httpContextAccessor.HttpContext.User
                .FindFirst(ClaimTypes.GivenName);
            if (givenName != null)
            {
                GivenName = givenName.Value;
            }
            else
            {
                GivenName = User.Identity.Name;
            }
            // Need to determine where we are to set the RedirectUri
            RedirectUri = _httpContextAccessor.HttpContext.Request.Host.Value;
        }
        catch { }
    }
}