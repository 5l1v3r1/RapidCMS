<nav>
    <ul class="pagination">
        <li class="page-item @(CurrentPage == 1 ? "disabled" : "")"><button class="page-link" @onclick="@(e => OnPageChanged.InvokeAsync(CurrentPage - 1))">Previous</button></li>

        @for (var page = 1; page <= (MaxPage ?? CurrentPage); page++)
        {
            var local = page;

            <li class="page-item @(CurrentPage == local ? "active" : "")"><button class="page-link" @onclick="@(e => OnPageChanged.InvokeAsync(local))">@(local)</button></li>
        }

        @if (!MaxPage.HasValue)
        {
            <li class="page-item disabled"><a class="page-link" href="">..</a></li>
        }

        <li class="page-item @(CurrentPage == MaxPage ? "disabled" : "")"><button class="page-link" @onclick="@(e => OnPageChanged.InvokeAsync(CurrentPage + 1))">Next</button></li>
    </ul>
</nav>

@code  {
    [Parameter] private int CurrentPage { get; set; }
    [Parameter] private int? MaxPage { get; set; }
    [Parameter] private EventCallback<int> OnPageChanged { get; set; }
}