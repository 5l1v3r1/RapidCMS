@inherits BaseSection

@if (Section != null && Section.Elements != null && Section.Elements.Any() && EditContext != null && Section.IsVisible(EditContext.Entity))
{
    <div class="content">
        @if (!string.IsNullOrWhiteSpace(Section.Label))
        {
            <h2 class="block-header">@Section.Label</h2>
        }

        @if (Section.Buttons != null && Section.Buttons.Any())
        {
            <div class="nested-buttons">
                <Buttonbar Buttons="Section.Buttons" OnButtonClick="@OnButtonClick" />
            </div>
        }

        @foreach (var element in Section.Elements)
        {
            if (!element.IsVisible(EditContext.Entity))
            {
                continue;
            }

            if (element is FieldUI field)
            {
                <div class="form-row">
                    <div class="col-2">
                        <label class="col-form-label">@field.Name</label>
                        <small class="form-text text-muted">@field.Description</small>
                    </div>
                    <div class="col-10">
                        @if (field is ExpressionFieldUI expressionField)
                        {
                            @expressionField.Expression.StringGetter(EditContext.Entity)
                        }
                        else if (field is PropertyFieldUI propertyField)
                        {
                            <UIEditor Field="field" Entity="@EditContext.Entity" />
                        }
                    </div>
                </div>
            }
            else if (element is SubCollectionUI subCollection)
            {
                <div class="nested-content">
                    @* TODO: change to something which is not a page *@
                    <RapidCMS.UI.Components.Pages.Collection Action=@(EditContext.UsageType.HasFlag(UsageType.View) ? Constants.List : Constants.Edit)
                                                             CollectionAlias=@subCollection.CollectionAlias
                                                             ParentId=@EditContext.Entity.Id />
                </div>
            }
            else if (element is RelatedCollectionUI relatedCollection)
            {
                if (!EditContext.UsageType.HasFlag(UsageType.New))
                {
                    <div class="nested-content">
                        <RelationCollection Action=@(EditContext.UsageType.HasFlag(UsageType.View) ? Constants.List : Constants.Edit)
                                            CollectionAlias=@relatedCollection.CollectionAlias
                                            RelatedEntity=@EditContext.Entity />
                    </div>
                }
            }
        }
    </div>
}

@code {
    [Parameter] EventHandler<ButtonClickEventArgs> OnButtonClick { get; set; }
}