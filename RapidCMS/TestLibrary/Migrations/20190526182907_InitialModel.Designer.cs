// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestLibrary.Data;

namespace TestLibrary.Migrations
{
    [DbContext(typeof(TestDbContext))]
    [Migration("20190526182907_InitialModel")]
    partial class InitialModel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0-preview5.19227.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TestLibrary.Entities.CountryEntity", b =>
                {
                    b.Property<int>("_Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("_Id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("TestLibrary.Entities.PersonCountryEntity", b =>
                {
                    b.Property<int?>("CountryId");

                    b.Property<int?>("PersonId");

                    b.HasKey("CountryId", "PersonId");

                    b.HasIndex("PersonId");

                    b.ToTable("PersonContries");
                });

            modelBuilder.Entity("TestLibrary.Entities.PersonEntity", b =>
                {
                    b.Property<int>("_Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("_Id");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("TestLibrary.Entities.PersonCountryEntity", b =>
                {
                    b.HasOne("TestLibrary.Entities.CountryEntity", "Country")
                        .WithMany("Person")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TestLibrary.Entities.PersonEntity", "Person")
                        .WithMany("Country")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
