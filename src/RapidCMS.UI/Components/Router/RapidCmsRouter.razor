<CascadingValue Value="@CustomLogin" Name="CustomLogin">
    <Router AppAssembly="typeof(RapidCmsRouter).Assembly">
        <Found Context="routeData">
            @if (!IsAuthenticated)
            {
                <LayoutView Layout="typeof(LoginLayout)" />
            }
            else
            {
                <RouteView RouteData="routeData" DefaultLayout="typeof(MainLayout)" />
            }
        </Found>
        <NotFound>
            <LayoutView Layout="typeof(MainLayout)">
                <h1>Page not found</h1>
                <p>Sorry, but there's nothing here!</p>
            </LayoutView>
        </NotFound>
    </Router>
</CascadingValue>

@code {
    private RenderFragment? CustomLogin { get; set; }
    private bool IsAuthenticated { get; set; }

    [Inject]
    private ICustomRegistrationProvider Registrations { get; set; }

    [Inject]
    private IAuthenticationStateProvider AuthenticationStateProvider { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        CustomLogin = Registrations.CustomLoginRegistration.ToRenderFragment();

        IsAuthenticated = await AuthenticationStateProvider.UserIsAuthenticatedAsync();

        await base.OnParametersSetAsync();
    }
}