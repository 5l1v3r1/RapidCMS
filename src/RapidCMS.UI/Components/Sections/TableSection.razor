@inherits BaseSection

<div class="content">
    <table class="table">
        <thead>
            <tr>
                @{
                    if (CollapseEmptyCells && UI.CommonFields != null)
                    {
                        foreach (var field in UI.CommonFields)
                        {
                            <HeaderCell Field="field" OnPageChanged="@OnPageChanged" />
                        }

                        if (UI.MaxUniqueFieldsInSingleEntity - UI.CommonFields.Count > 0)
                        {
                            <td colspan=@(UI.MaxUniqueFieldsInSingleEntity - UI.CommonFields.Count)></td>
                        }
                    }
                    else if (UI.UniqueFields != null)
                    {
                        foreach (var field in UI.UniqueFields)
                        {
                            <HeaderCell Field="field" />
                        }
                    }

                    if (UI.SectionsHaveButtons)
                    {
                        <td class="button-cell"></td>
                    }
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var (context, sections) in Sections)
            {
                <CascadingEditContext EditContext=@context>
                    @foreach (var section in sections)
                    {
                        <RowSection Section="section"
                                    UI="UI"
                                    OnButtonClick="OnButtonClick" />
                    }
                </CascadingEditContext>
            }

            @if (!Sections.Any())
            {
                <tr>
                    <td colspan="99">&nbsp;</td>
                </tr>
            }
            else
            {
                <tr
                    @ondragenter="DragEnter" 
                    @ondragleave="DragLeave"
                    class="@(DraggedOver ? "dropover" : "")">
                    <td colspan="99">&nbsp;</td>
                </tr>
            }
        </tbody>
    </table>

    <Paginator CurrentPage="@CurrentPage"
               MaxPage="@MaxPage"
               OnPageChanged="@OnPageChanged" />
</div>

@code {
    private bool CollapseEmptyCells => UI.EmptyVariantColumnVisibility == EmptyVariantColumnVisibility.Collapse;

    [Parameter] public IEnumerable<(EditContext editContext, IEnumerable<SectionUI> sections)> Sections { get; set; }
    [Parameter] public ListUI UI { get; set; }
    [Parameter] public EventCallback<ButtonClickEventArgs> OnButtonClick { get; set; }

    [Parameter] public int CurrentPage { get; set; }
    [Parameter] public int? MaxPage { get; set; }
    [Parameter] public EventCallback<int> OnPageChanged { get; set; }
    
    [Inject] private IJSRuntime runtime { get; set; }
    static bool DraggedOver { get; set; }
    
    private async Task DragEnter(DragEventArgs args)
    {
        DraggedOver = true;

        await runtime.InvokeVoidAsync("console.log", $"Over end");
    }

    private async Task DragLeave(DragEventArgs args)
    {
        DraggedOver = false;
    }
}
