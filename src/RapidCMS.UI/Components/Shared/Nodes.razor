@inherits NodesBase

@if (UI != null && NodesVisible != null)
{
    <ul class="nav flex-column">
        @foreach (var node in UI)
        {
            <li class="nav-item">
                @if (!node.RootVisibleOfCollections)
                {
                    <button @onclick="@((MouseEventArgs e) => NodesVisible[node] = !NodesVisible[node])" class="toggle">
                        @if (NodesVisible[node])
                        {
                            <i class="icon ion-md-arrow-dropdown"></i>
                        }
                        else
                        {
                            <i class="icon ion-md-arrow-dropright"></i>
                        }
                    </button>
                }
                else
                {
                    <button class="toggle" disabled>
                        <i class="icon"></i>
                    </button>
                }

                @if (node.Path != null)
                {
                    <NavLink href=@node.Path>@node.Name</NavLink>
                }
                else
                {
                    <a href="/unauthorized" class="disabled">@node.Name</a>
                }

                <ul class="nav flex-column">
                    @if (NodesVisible[node])
                    {
                        @foreach (var subCollection in node.Collections)
                        {
                            <Tree CollectionAlias=@subCollection ParentId=@node.Id />
                        }
                    }
                </ul>
            </li>
        }
    </ul>
}

@code {

    Dictionary<TreeNodeUI, bool>? NodesVisible;
    List<TreeNodeUI>? UI;

    protected override async Task OnParametersSetAsync()
    {
        await OnNodesUpdateAsync();
    }

    protected override async Task OnNodesUpdateAsync()
    {
        UI = await TreeService.GetNodesAsync(CollectionAlias, ParentId);
        NodesVisible = UI.ToDictionary(x => x, x => x.RootVisibleOfCollections);
        StateHasChanged();
    }
}
